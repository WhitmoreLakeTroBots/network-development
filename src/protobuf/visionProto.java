package protobuf;
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vision.proto

public final class visionProto {
  private visionProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface visionGearOrBuilder extends
      // @@protoc_insertion_point(interface_extends:visionGear)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool imageValid = 1;</code>
     */
    boolean getImageValid();

    /**
     * <code>int32 vertOffsetPx = 2;</code>
     */
    int getVertOffsetPx();

    /**
     * <code>int32 horOffsetPx = 3;</code>
     */
    int getHorOffsetPx();

    /**
     * <code>double distanceIn = 4;</code>
     */
    double getDistanceIn();

    /**
     * <code>double angleD = 5;</code>
     */
    double getAngleD();
  }
  /**
   * Protobuf type {@code visionGear}
   */
  public  static final class visionGear extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:visionGear)
      visionGearOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use visionGear.newBuilder() to construct.
    private visionGear(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private visionGear() {
      imageValid_ = false;
      vertOffsetPx_ = 0;
      horOffsetPx_ = 0;
      distanceIn_ = 0D;
      angleD_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private visionGear(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              imageValid_ = input.readBool();
              break;
            }
            case 16: {

              vertOffsetPx_ = input.readInt32();
              break;
            }
            case 24: {

              horOffsetPx_ = input.readInt32();
              break;
            }
            case 33: {

              distanceIn_ = input.readDouble();
              break;
            }
            case 41: {

              angleD_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return visionProto.internal_static_visionGear_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return visionProto.internal_static_visionGear_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              visionProto.visionGear.class, visionProto.visionGear.Builder.class);
    }

    public static final int IMAGEVALID_FIELD_NUMBER = 1;
    private boolean imageValid_;
    /**
     * <code>bool imageValid = 1;</code>
     */
    public boolean getImageValid() {
      return imageValid_;
    }

    public static final int VERTOFFSETPX_FIELD_NUMBER = 2;
    private int vertOffsetPx_;
    /**
     * <code>int32 vertOffsetPx = 2;</code>
     */
    public int getVertOffsetPx() {
      return vertOffsetPx_;
    }

    public static final int HOROFFSETPX_FIELD_NUMBER = 3;
    private int horOffsetPx_;
    /**
     * <code>int32 horOffsetPx = 3;</code>
     */
    public int getHorOffsetPx() {
      return horOffsetPx_;
    }

    public static final int DISTANCEIN_FIELD_NUMBER = 4;
    private double distanceIn_;
    /**
     * <code>double distanceIn = 4;</code>
     */
    public double getDistanceIn() {
      return distanceIn_;
    }

    public static final int ANGLED_FIELD_NUMBER = 5;
    private double angleD_;
    /**
     * <code>double angleD = 5;</code>
     */
    public double getAngleD() {
      return angleD_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (imageValid_ != false) {
        output.writeBool(1, imageValid_);
      }
      if (vertOffsetPx_ != 0) {
        output.writeInt32(2, vertOffsetPx_);
      }
      if (horOffsetPx_ != 0) {
        output.writeInt32(3, horOffsetPx_);
      }
      if (distanceIn_ != 0D) {
        output.writeDouble(4, distanceIn_);
      }
      if (angleD_ != 0D) {
        output.writeDouble(5, angleD_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (imageValid_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, imageValid_);
      }
      if (vertOffsetPx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, vertOffsetPx_);
      }
      if (horOffsetPx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, horOffsetPx_);
      }
      if (distanceIn_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, distanceIn_);
      }
      if (angleD_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, angleD_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof visionProto.visionGear)) {
        return super.equals(obj);
      }
      visionProto.visionGear other = (visionProto.visionGear) obj;

      boolean result = true;
      result = result && (getImageValid()
          == other.getImageValid());
      result = result && (getVertOffsetPx()
          == other.getVertOffsetPx());
      result = result && (getHorOffsetPx()
          == other.getHorOffsetPx());
      result = result && (
          java.lang.Double.doubleToLongBits(getDistanceIn())
          == java.lang.Double.doubleToLongBits(
              other.getDistanceIn()));
      result = result && (
          java.lang.Double.doubleToLongBits(getAngleD())
          == java.lang.Double.doubleToLongBits(
              other.getAngleD()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IMAGEVALID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getImageValid());
      hash = (37 * hash) + VERTOFFSETPX_FIELD_NUMBER;
      hash = (53 * hash) + getVertOffsetPx();
      hash = (37 * hash) + HOROFFSETPX_FIELD_NUMBER;
      hash = (53 * hash) + getHorOffsetPx();
      hash = (37 * hash) + DISTANCEIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDistanceIn()));
      hash = (37 * hash) + ANGLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAngleD()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static visionProto.visionGear parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static visionProto.visionGear parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static visionProto.visionGear parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static visionProto.visionGear parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static visionProto.visionGear parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static visionProto.visionGear parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static visionProto.visionGear parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static visionProto.visionGear parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static visionProto.visionGear parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static visionProto.visionGear parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static visionProto.visionGear parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static visionProto.visionGear parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(visionProto.visionGear prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code visionGear}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:visionGear)
        visionProto.visionGearOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return visionProto.internal_static_visionGear_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return visionProto.internal_static_visionGear_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                visionProto.visionGear.class, visionProto.visionGear.Builder.class);
      }

      // Construct using visionProto.visionGear.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        imageValid_ = false;

        vertOffsetPx_ = 0;

        horOffsetPx_ = 0;

        distanceIn_ = 0D;

        angleD_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return visionProto.internal_static_visionGear_descriptor;
      }

      public visionProto.visionGear getDefaultInstanceForType() {
        return visionProto.visionGear.getDefaultInstance();
      }

      public visionProto.visionGear build() {
        visionProto.visionGear result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public visionProto.visionGear buildPartial() {
        visionProto.visionGear result = new visionProto.visionGear(this);
        result.imageValid_ = imageValid_;
        result.vertOffsetPx_ = vertOffsetPx_;
        result.horOffsetPx_ = horOffsetPx_;
        result.distanceIn_ = distanceIn_;
        result.angleD_ = angleD_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof visionProto.visionGear) {
          return mergeFrom((visionProto.visionGear)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(visionProto.visionGear other) {
        if (other == visionProto.visionGear.getDefaultInstance()) return this;
        if (other.getImageValid() != false) {
          setImageValid(other.getImageValid());
        }
        if (other.getVertOffsetPx() != 0) {
          setVertOffsetPx(other.getVertOffsetPx());
        }
        if (other.getHorOffsetPx() != 0) {
          setHorOffsetPx(other.getHorOffsetPx());
        }
        if (other.getDistanceIn() != 0D) {
          setDistanceIn(other.getDistanceIn());
        }
        if (other.getAngleD() != 0D) {
          setAngleD(other.getAngleD());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        visionProto.visionGear parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (visionProto.visionGear) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean imageValid_ ;
      /**
       * <code>bool imageValid = 1;</code>
       */
      public boolean getImageValid() {
        return imageValid_;
      }
      /**
       * <code>bool imageValid = 1;</code>
       */
      public Builder setImageValid(boolean value) {
        
        imageValid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool imageValid = 1;</code>
       */
      public Builder clearImageValid() {
        
        imageValid_ = false;
        onChanged();
        return this;
      }

      private int vertOffsetPx_ ;
      /**
       * <code>int32 vertOffsetPx = 2;</code>
       */
      public int getVertOffsetPx() {
        return vertOffsetPx_;
      }
      /**
       * <code>int32 vertOffsetPx = 2;</code>
       */
      public Builder setVertOffsetPx(int value) {
        
        vertOffsetPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 vertOffsetPx = 2;</code>
       */
      public Builder clearVertOffsetPx() {
        
        vertOffsetPx_ = 0;
        onChanged();
        return this;
      }

      private int horOffsetPx_ ;
      /**
       * <code>int32 horOffsetPx = 3;</code>
       */
      public int getHorOffsetPx() {
        return horOffsetPx_;
      }
      /**
       * <code>int32 horOffsetPx = 3;</code>
       */
      public Builder setHorOffsetPx(int value) {
        
        horOffsetPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 horOffsetPx = 3;</code>
       */
      public Builder clearHorOffsetPx() {
        
        horOffsetPx_ = 0;
        onChanged();
        return this;
      }

      private double distanceIn_ ;
      /**
       * <code>double distanceIn = 4;</code>
       */
      public double getDistanceIn() {
        return distanceIn_;
      }
      /**
       * <code>double distanceIn = 4;</code>
       */
      public Builder setDistanceIn(double value) {
        
        distanceIn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double distanceIn = 4;</code>
       */
      public Builder clearDistanceIn() {
        
        distanceIn_ = 0D;
        onChanged();
        return this;
      }

      private double angleD_ ;
      /**
       * <code>double angleD = 5;</code>
       */
      public double getAngleD() {
        return angleD_;
      }
      /**
       * <code>double angleD = 5;</code>
       */
      public Builder setAngleD(double value) {
        
        angleD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double angleD = 5;</code>
       */
      public Builder clearAngleD() {
        
        angleD_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:visionGear)
    }

    // @@protoc_insertion_point(class_scope:visionGear)
    private static final visionProto.visionGear DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new visionProto.visionGear();
    }

    public static visionProto.visionGear getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<visionGear>
        PARSER = new com.google.protobuf.AbstractParser<visionGear>() {
      public visionGear parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new visionGear(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<visionGear> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<visionGear> getParserForType() {
      return PARSER;
    }

    public visionProto.visionGear getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface visionBoilerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:visionBoiler)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool imageValid = 1;</code>
     */
    boolean getImageValid();

    /**
     * <code>int32 vertOffsetPx = 2;</code>
     */
    int getVertOffsetPx();

    /**
     * <code>int32 horOffsetPx = 3;</code>
     */
    int getHorOffsetPx();

    /**
     * <code>double distanceIn = 4;</code>
     */
    double getDistanceIn();

    /**
     * <code>double angleD = 5;</code>
     */
    double getAngleD();

    /**
     * <code>int32 fallingFuel = 6;</code>
     */
    int getFallingFuel();
  }
  /**
   * Protobuf type {@code visionBoiler}
   */
  public  static final class visionBoiler extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:visionBoiler)
      visionBoilerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use visionBoiler.newBuilder() to construct.
    private visionBoiler(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private visionBoiler() {
      imageValid_ = false;
      vertOffsetPx_ = 0;
      horOffsetPx_ = 0;
      distanceIn_ = 0D;
      angleD_ = 0D;
      fallingFuel_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private visionBoiler(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              imageValid_ = input.readBool();
              break;
            }
            case 16: {

              vertOffsetPx_ = input.readInt32();
              break;
            }
            case 24: {

              horOffsetPx_ = input.readInt32();
              break;
            }
            case 33: {

              distanceIn_ = input.readDouble();
              break;
            }
            case 41: {

              angleD_ = input.readDouble();
              break;
            }
            case 48: {

              fallingFuel_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return visionProto.internal_static_visionBoiler_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return visionProto.internal_static_visionBoiler_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              visionProto.visionBoiler.class, visionProto.visionBoiler.Builder.class);
    }

    public static final int IMAGEVALID_FIELD_NUMBER = 1;
    private boolean imageValid_;
    /**
     * <code>bool imageValid = 1;</code>
     */
    public boolean getImageValid() {
      return imageValid_;
    }

    public static final int VERTOFFSETPX_FIELD_NUMBER = 2;
    private int vertOffsetPx_;
    /**
     * <code>int32 vertOffsetPx = 2;</code>
     */
    public int getVertOffsetPx() {
      return vertOffsetPx_;
    }

    public static final int HOROFFSETPX_FIELD_NUMBER = 3;
    private int horOffsetPx_;
    /**
     * <code>int32 horOffsetPx = 3;</code>
     */
    public int getHorOffsetPx() {
      return horOffsetPx_;
    }

    public static final int DISTANCEIN_FIELD_NUMBER = 4;
    private double distanceIn_;
    /**
     * <code>double distanceIn = 4;</code>
     */
    public double getDistanceIn() {
      return distanceIn_;
    }

    public static final int ANGLED_FIELD_NUMBER = 5;
    private double angleD_;
    /**
     * <code>double angleD = 5;</code>
     */
    public double getAngleD() {
      return angleD_;
    }

    public static final int FALLINGFUEL_FIELD_NUMBER = 6;
    private int fallingFuel_;
    /**
     * <code>int32 fallingFuel = 6;</code>
     */
    public int getFallingFuel() {
      return fallingFuel_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (imageValid_ != false) {
        output.writeBool(1, imageValid_);
      }
      if (vertOffsetPx_ != 0) {
        output.writeInt32(2, vertOffsetPx_);
      }
      if (horOffsetPx_ != 0) {
        output.writeInt32(3, horOffsetPx_);
      }
      if (distanceIn_ != 0D) {
        output.writeDouble(4, distanceIn_);
      }
      if (angleD_ != 0D) {
        output.writeDouble(5, angleD_);
      }
      if (fallingFuel_ != 0) {
        output.writeInt32(6, fallingFuel_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (imageValid_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, imageValid_);
      }
      if (vertOffsetPx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, vertOffsetPx_);
      }
      if (horOffsetPx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, horOffsetPx_);
      }
      if (distanceIn_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, distanceIn_);
      }
      if (angleD_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, angleD_);
      }
      if (fallingFuel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, fallingFuel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof visionProto.visionBoiler)) {
        return super.equals(obj);
      }
      visionProto.visionBoiler other = (visionProto.visionBoiler) obj;

      boolean result = true;
      result = result && (getImageValid()
          == other.getImageValid());
      result = result && (getVertOffsetPx()
          == other.getVertOffsetPx());
      result = result && (getHorOffsetPx()
          == other.getHorOffsetPx());
      result = result && (
          java.lang.Double.doubleToLongBits(getDistanceIn())
          == java.lang.Double.doubleToLongBits(
              other.getDistanceIn()));
      result = result && (
          java.lang.Double.doubleToLongBits(getAngleD())
          == java.lang.Double.doubleToLongBits(
              other.getAngleD()));
      result = result && (getFallingFuel()
          == other.getFallingFuel());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IMAGEVALID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getImageValid());
      hash = (37 * hash) + VERTOFFSETPX_FIELD_NUMBER;
      hash = (53 * hash) + getVertOffsetPx();
      hash = (37 * hash) + HOROFFSETPX_FIELD_NUMBER;
      hash = (53 * hash) + getHorOffsetPx();
      hash = (37 * hash) + DISTANCEIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDistanceIn()));
      hash = (37 * hash) + ANGLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAngleD()));
      hash = (37 * hash) + FALLINGFUEL_FIELD_NUMBER;
      hash = (53 * hash) + getFallingFuel();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static visionProto.visionBoiler parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static visionProto.visionBoiler parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static visionProto.visionBoiler parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static visionProto.visionBoiler parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static visionProto.visionBoiler parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static visionProto.visionBoiler parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static visionProto.visionBoiler parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static visionProto.visionBoiler parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static visionProto.visionBoiler parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static visionProto.visionBoiler parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static visionProto.visionBoiler parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static visionProto.visionBoiler parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(visionProto.visionBoiler prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code visionBoiler}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:visionBoiler)
        visionProto.visionBoilerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return visionProto.internal_static_visionBoiler_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return visionProto.internal_static_visionBoiler_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                visionProto.visionBoiler.class, visionProto.visionBoiler.Builder.class);
      }

      // Construct using visionProto.visionBoiler.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        imageValid_ = false;

        vertOffsetPx_ = 0;

        horOffsetPx_ = 0;

        distanceIn_ = 0D;

        angleD_ = 0D;

        fallingFuel_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return visionProto.internal_static_visionBoiler_descriptor;
      }

      public visionProto.visionBoiler getDefaultInstanceForType() {
        return visionProto.visionBoiler.getDefaultInstance();
      }

      public visionProto.visionBoiler build() {
        visionProto.visionBoiler result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public visionProto.visionBoiler buildPartial() {
        visionProto.visionBoiler result = new visionProto.visionBoiler(this);
        result.imageValid_ = imageValid_;
        result.vertOffsetPx_ = vertOffsetPx_;
        result.horOffsetPx_ = horOffsetPx_;
        result.distanceIn_ = distanceIn_;
        result.angleD_ = angleD_;
        result.fallingFuel_ = fallingFuel_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof visionProto.visionBoiler) {
          return mergeFrom((visionProto.visionBoiler)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(visionProto.visionBoiler other) {
        if (other == visionProto.visionBoiler.getDefaultInstance()) return this;
        if (other.getImageValid() != false) {
          setImageValid(other.getImageValid());
        }
        if (other.getVertOffsetPx() != 0) {
          setVertOffsetPx(other.getVertOffsetPx());
        }
        if (other.getHorOffsetPx() != 0) {
          setHorOffsetPx(other.getHorOffsetPx());
        }
        if (other.getDistanceIn() != 0D) {
          setDistanceIn(other.getDistanceIn());
        }
        if (other.getAngleD() != 0D) {
          setAngleD(other.getAngleD());
        }
        if (other.getFallingFuel() != 0) {
          setFallingFuel(other.getFallingFuel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        visionProto.visionBoiler parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (visionProto.visionBoiler) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean imageValid_ ;
      /**
       * <code>bool imageValid = 1;</code>
       */
      public boolean getImageValid() {
        return imageValid_;
      }
      /**
       * <code>bool imageValid = 1;</code>
       */
      public Builder setImageValid(boolean value) {
        
        imageValid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool imageValid = 1;</code>
       */
      public Builder clearImageValid() {
        
        imageValid_ = false;
        onChanged();
        return this;
      }

      private int vertOffsetPx_ ;
      /**
       * <code>int32 vertOffsetPx = 2;</code>
       */
      public int getVertOffsetPx() {
        return vertOffsetPx_;
      }
      /**
       * <code>int32 vertOffsetPx = 2;</code>
       */
      public Builder setVertOffsetPx(int value) {
        
        vertOffsetPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 vertOffsetPx = 2;</code>
       */
      public Builder clearVertOffsetPx() {
        
        vertOffsetPx_ = 0;
        onChanged();
        return this;
      }

      private int horOffsetPx_ ;
      /**
       * <code>int32 horOffsetPx = 3;</code>
       */
      public int getHorOffsetPx() {
        return horOffsetPx_;
      }
      /**
       * <code>int32 horOffsetPx = 3;</code>
       */
      public Builder setHorOffsetPx(int value) {
        
        horOffsetPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 horOffsetPx = 3;</code>
       */
      public Builder clearHorOffsetPx() {
        
        horOffsetPx_ = 0;
        onChanged();
        return this;
      }

      private double distanceIn_ ;
      /**
       * <code>double distanceIn = 4;</code>
       */
      public double getDistanceIn() {
        return distanceIn_;
      }
      /**
       * <code>double distanceIn = 4;</code>
       */
      public Builder setDistanceIn(double value) {
        
        distanceIn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double distanceIn = 4;</code>
       */
      public Builder clearDistanceIn() {
        
        distanceIn_ = 0D;
        onChanged();
        return this;
      }

      private double angleD_ ;
      /**
       * <code>double angleD = 5;</code>
       */
      public double getAngleD() {
        return angleD_;
      }
      /**
       * <code>double angleD = 5;</code>
       */
      public Builder setAngleD(double value) {
        
        angleD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double angleD = 5;</code>
       */
      public Builder clearAngleD() {
        
        angleD_ = 0D;
        onChanged();
        return this;
      }

      private int fallingFuel_ ;
      /**
       * <code>int32 fallingFuel = 6;</code>
       */
      public int getFallingFuel() {
        return fallingFuel_;
      }
      /**
       * <code>int32 fallingFuel = 6;</code>
       */
      public Builder setFallingFuel(int value) {
        
        fallingFuel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 fallingFuel = 6;</code>
       */
      public Builder clearFallingFuel() {
        
        fallingFuel_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:visionBoiler)
    }

    // @@protoc_insertion_point(class_scope:visionBoiler)
    private static final visionProto.visionBoiler DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new visionProto.visionBoiler();
    }

    public static visionProto.visionBoiler getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<visionBoiler>
        PARSER = new com.google.protobuf.AbstractParser<visionBoiler>() {
      public visionBoiler parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new visionBoiler(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<visionBoiler> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<visionBoiler> getParserForType() {
      return PARSER;
    }

    public visionProto.visionBoiler getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_visionGear_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_visionGear_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_visionBoiler_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_visionBoiler_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014vision.proto\"o\n\nvisionGear\022\022\n\nimageVal" +
      "id\030\001 \001(\010\022\024\n\014vertOffsetPx\030\002 \001(\005\022\023\n\013horOff" +
      "setPx\030\003 \001(\005\022\022\n\ndistanceIn\030\004 \001(\001\022\016\n\006angle" +
      "D\030\005 \001(\001\"\206\001\n\014visionBoiler\022\022\n\nimageValid\030\001" +
      " \001(\010\022\024\n\014vertOffsetPx\030\002 \001(\005\022\023\n\013horOffsetP" +
      "x\030\003 \001(\005\022\022\n\ndistanceIn\030\004 \001(\001\022\016\n\006angleD\030\005 " +
      "\001(\001\022\023\n\013fallingFuel\030\006 \001(\005B\rB\013visionProtob" +
      "\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_visionGear_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_visionGear_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_visionGear_descriptor,
        new java.lang.String[] { "ImageValid", "VertOffsetPx", "HorOffsetPx", "DistanceIn", "AngleD", });
    internal_static_visionBoiler_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_visionBoiler_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_visionBoiler_descriptor,
        new java.lang.String[] { "ImageValid", "VertOffsetPx", "HorOffsetPx", "DistanceIn", "AngleD", "FallingFuel", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
